import com.benasher44.uuid.Uuid;
import kotlinx.datetime.LocalDate;
import tech.alexib.yaba.kmm.model.TransactionType;

CREATE TABLE TransactionEntity (
id TEXT AS Uuid NOT NULL PRIMARY KEY,
name TEXT NOT NULL,
type TEXT AS TransactionType NOT NULL,
amount REAL AS Double NOT NULL,
date INTEGER AS LocalDate NOT NULL,
account_id TEXT AS Uuid NOT NULL,
item_id TEXT AS Uuid NOT NULL,
category TEXT,
subcategory TEXT,
iso_currency_code TEXT,
pending INTEGER AS Boolean DEFAULT 1,
FOREIGN KEY(account_id) REFERENCES AccountEntity(id)
ON DELETE CASCADE,
FOREIGN KEY(item_id) REFERENCES ItemEntity(id)
ON DELETE CASCADE
);

CREATE VIEW UserTransasction
AS
SELECT
    t.id,
    t.account_id,
    t.item_id,
    a.user_id,
    t.category,
    t.subcategory,
    t.type,
    t.name,
    t.iso_currency_code,
    t.date,
    t.amount,
    t.pending
FROM
    TransactionEntity t
        LEFT JOIN UserAccount a ON t.account_id = a.id;

insert:
INSERT OR REPLACE INTO TransactionEntity
VALUES ?;

selectAll:
SELECT *
FROM UserTransasction
WHERE user_id = ?
ORDER BY date DESC;


selectRecent:
SELECT *
FROM UserTransasction
WHERE user_id = ?
ORDER BY date DESC
LIMIT 5;

selectById:
SELECT *
FROM UserTransasction
WHERE id = ?;

selectByAccontId:
SELECT *
FROM UserTransasction
WHERE account_id = ?
ORDER BY date DESC;

selectByItemId:
SELECT *
FROM UserTransasction
WHERE item_id = ?
ORDER BY date DESC;

count:
SELECT COUNT(*) FROM UserTransasction
WHERE user_id = ?;

deleteByItemId:
DELETE FROM TransactionEntity
WHERE item_id = ?;